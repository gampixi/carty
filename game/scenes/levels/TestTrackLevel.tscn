[gd_scene load_steps=9 format=2]

[ext_resource path="res://scenes/prefabs/cars/TestCar.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/tracks/TestTrack.tscn" type="PackedScene" id=2]
[ext_resource path="res://scenes/ui/windows/HandlingTuningWindow.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/ui/windows/PowerTuningWindow.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Label

export(NodePath) var car

var output_format = \\
\"\"\"FL RPM: {fl_rpm}, skid: {fl_skid} {fl_contact}
FR RPM: {fr_rpm}, skid: {fr_skid} {fr_contact}
BL RPM: {bl_rpm}, skid: {bl_skid} {bl_contact}
BR RPM: {br_rpm}, skid: {br_skid} {br_contact}
THROTTLE: {throttle}, POWER: {power}, SPEED: {speed}\"\"\"

func _ready():
	car = get_node(car)

func _physics_process(_delta):
	set_text(output_format.format({\\
		\"fl_rpm\": car.wheel_fl.get_rpm(), \"fl_skid\": car.wheel_fl.get_skidinfo(), \"fl_contact\": \"CONTACT\" if car.wheel_fl.is_in_contact() else \"\",\\
		\"fr_rpm\": car.wheel_fr.get_rpm(), \"fr_skid\": car.wheel_fr.get_skidinfo(), \"fr_contact\": \"CONTACT\" if car.wheel_fr.is_in_contact() else \"\",\\
		\"bl_rpm\": car.wheel_bl.get_rpm(), \"bl_skid\": car.wheel_bl.get_skidinfo(), \"bl_contact\": \"CONTACT\" if car.wheel_bl.is_in_contact() else \"\",\\
		\"br_rpm\": car.wheel_br.get_rpm(), \"br_skid\": car.wheel_br.get_skidinfo(), \"br_contact\": \"CONTACT\" if car.wheel_br.is_in_contact() else \"\",\\
		\"throttle\": car.throttle, \"power\": car.power_tuning.power(car.get_speed(), car.throttle), \"speed\": car.get_speed()\\
		}))
"

[sub_resource type="GDScript" id=2]
script/source = "extends Button

# Handling Tuning Button

onready var window = $\"../HandlingTuningWindow\"

func _on_HandlingTuningButton_pressed():
	window.popup()
"

[sub_resource type="GDScript" id=3]
script/source = "extends Button

# Power Tuning Button

onready var window = $\"../PowerTuningWindow\"

func _on_PowerTuningButton_pressed():
	window.popup()
"

[sub_resource type="GDScript" id=4]
script/source = "extends Button

# Reset Car Button

export(NodePath) var car
var _start_pos
var _start_rot

func _ready():
	car = get_node(car)
	_start_pos = car.translation
	_start_rot = car.rotation

func _on_ResetCarButton_pressed():
	car.translation = _start_pos
	car.rotation = _start_rot
"

[node name="Spatial" type="Spatial"]

[node name="TestTrack" parent="." instance=ExtResource( 2 )]

[node name="TestCar" parent="." instance=ExtResource( 1 )]
transform = Transform( -0.999856, 0, 0.0169463, 0, 1, 0, -0.0169463, 0, -0.999856, 1.47295, 1.70124, -0.406423 )

[node name="Camera" type="Camera" parent="TestCar"]
transform = Transform( -1, 7.55629e-08, -3.16959e-07, 0, 0.972739, 0.231901, 3.25841e-07, 0.231901, -0.972739, 0, 1.604, -3.542 )
current = true

[node name="WheelDebugText" type="Label" parent="."]
margin_right = 40.0
margin_bottom = 14.0
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
text = "FR: rpm: 500 skid: 0.7
FR: rpm: 500 skid: 0.7
FR: rpm: 500 skid: 0.7
FR: rpm: 500 skid: 0.7"
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
car = NodePath("../TestCar")

[node name="HandlingTuningWindow" parent="." instance=ExtResource( 3 )]

[node name="PowerTuningWindow" parent="." instance=ExtResource( 5 )]

[node name="HandlingTuningButton" type="Button" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 10.0
margin_top = -27.0
margin_right = 124.0
margin_bottom = -7.0
text = "Handling Tuning"
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="PowerTuningButton" type="Button" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 137.0
margin_top = -27.0
margin_right = 251.0
margin_bottom = -7.0
text = "Power Tuning"
script = SubResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ResetCarButton" type="Button" parent="."]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 263.0
margin_top = -27.0
margin_right = 377.0
margin_bottom = -7.0
text = "Reset Car"
script = SubResource( 4 )
__meta__ = {
"_edit_use_anchors_": false
}
car = NodePath("../TestCar")
[connection signal="pressed" from="HandlingTuningButton" to="HandlingTuningButton" method="_on_HandlingTuningButton_pressed"]
[connection signal="pressed" from="PowerTuningButton" to="PowerTuningButton" method="_on_PowerTuningButton_pressed"]
[connection signal="pressed" from="ResetCarButton" to="ResetCarButton" method="_on_ResetCarButton_pressed"]
